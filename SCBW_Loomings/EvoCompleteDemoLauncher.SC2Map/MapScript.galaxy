//==================================================================================================
// 
// Generated Map Script
// 
// Name:   
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "LibAE8FC9D3"
include "Lib1926661B"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libAE8FC9D3_InitLib();
    lib1926661B_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Structures
//--------------------------------------------------------------------------------------------------
struct gs_KL_Glues {
    int lv_gluesPanel;
    int lv_landingPanel;
    int lv_land_ArchiveBtn;
    int lv_land_QuitBtn;
    int lv_land_StartBtn;
    int lv_land_AchiBtn;
    int lv_archivesPanel;
};

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
string gv_mapMusicTrack;
gs_KL_Glues gv_glues;
int gv_nextDifficulty;

void InitGlobals () {
    gv_glues.lv_gluesPanel = c_invalidDialogControlId;
    gv_glues.lv_landingPanel = c_invalidDialogControlId;
    gv_glues.lv_land_ArchiveBtn = c_invalidDialogControlId;
    gv_glues.lv_land_QuitBtn = c_invalidDialogControlId;
    gv_glues.lv_land_StartBtn = c_invalidDialogControlId;
    gv_glues.lv_land_AchiBtn = c_invalidDialogControlId;
    gv_glues.lv_archivesPanel = c_invalidDialogControlId;
    gv_nextDifficulty = 2;
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_KL_CreateGlues ();
void gf_DisplayGlues ();
void gf_MissionLaunchBack (trigger t);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Initialization;
trigger gt_Init01Game;
trigger gt_Init02MusicSound;
trigger gt_ML_ReturnToLanding;
trigger gt_Land_StartBtn;
trigger gt_Land_AchiBtn;
trigger gt_Land_Quit;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_KL_CreateGlues () {
    // Automatic Variable Declarations
    // Implementation
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/GluesMenus");
    gv_glues.lv_gluesPanel = DialogControlLastCreated();
    DialogControlHookup(gv_glues.lv_gluesPanel, c_triggerControlTypePanel, libNtve_gf_ConvertStringToUILayoutFrameName("LandingScreen"));
    gv_glues.lv_landingPanel = DialogControlLastCreated();
    DialogControlHookup(gv_glues.lv_landingPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("StartButtonPanel/Button"));
    gv_glues.lv_land_StartBtn = DialogControlLastCreated();
    DialogControlHookup(gv_glues.lv_landingPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("QuitButtonPanel/Button"));
    gv_glues.lv_land_QuitBtn = DialogControlLastCreated();
    DialogControlHookup(gv_glues.lv_landingPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("ArchivesButton"));
    gv_glues.lv_land_ArchiveBtn = DialogControlLastCreated();
    DialogControlHookup(gv_glues.lv_landingPanel, c_triggerControlTypeButton, libNtve_gf_ConvertStringToUILayoutFrameName("AchievementsButton"));
    gv_glues.lv_land_AchiBtn = DialogControlLastCreated();
}

void gf_DisplayGlues () {
    // Automatic Variable Declarations
    // Implementation
    if ((gv_glues.lv_gluesPanel == c_invalidDialogControlId)) {
        gf_KL_CreateGlues();
    }
    DialogControlSetVisible(gv_glues.lv_gluesPanel, PlayerGroupAll(), true);
    DialogControlSetVisible(gv_glues.lv_landingPanel, PlayerGroupAll(), true);
}

void gf_MissionLaunchBack (trigger t) {
    // Automatic Variable Declarations
    // Implementation
    TriggerAddEventGeneric(t, "KLCReturnToLanding");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialization
//--------------------------------------------------------------------------------------------------
bool gt_Initialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libAE8FC9D3_gf_InitializeAchievements();
    TriggerExecute(gt_Init01Game, true, true);
    TriggerExecute(gt_Init02MusicSound, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initialization_Init () {
    gt_Initialization = TriggerCreate("gt_Initialization_Func");
    TriggerAddEventMapInit(gt_Initialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Game
//--------------------------------------------------------------------------------------------------
bool gt_Init01Game_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_ULoadCampaignData("LStoryDemo");
    gv_nextDifficulty = lib1926661B_gf_ReturnCampaignDifficulty();
    libNtve_gf_HideGameUI(false, PlayerGroupAll());
    gf_DisplayGlues();
    GameSetSpeedLocked(true);
    GameSetSpeedValue(c_gameSpeedNormal);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01Game_Init () {
    gt_Init01Game = TriggerCreate("gt_Init01Game_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Music/Sound
//--------------------------------------------------------------------------------------------------
bool gt_Init02MusicSound_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryAmbient, true);
    gv_mapMusicTrack = "Music_TerrLow_SCI";
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, gv_mapMusicTrack, c_soundtrackCueAny, c_soundtrackIndexAny, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02MusicSound_Init () {
    gt_Init02MusicSound = TriggerCreate("gt_Init02MusicSound_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: ML_ReturnToLanding
//--------------------------------------------------------------------------------------------------
bool gt_ML_ReturnToLanding_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(true, 0.025, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    DialogControlSendAnimationEvent(gv_glues.lv_gluesPanel, PlayerGroupAll(), "FadeStart");
    Wait(0.025, c_timeGame);
    lib1926661B_gf_MissionLaunchClose();
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    DialogControlSetVisible(gv_glues.lv_gluesPanel, PlayerGroupAll(), true);
    DialogControlSetVisible(gv_glues.lv_landingPanel, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ML_ReturnToLanding_Init () {
    gt_ML_ReturnToLanding = TriggerCreate("gt_ML_ReturnToLanding_Func");
    gf_MissionLaunchBack(gt_ML_ReturnToLanding);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Land_StartBtn
//--------------------------------------------------------------------------------------------------
bool gt_Land_StartBtn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_glues.lv_land_StartBtn))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSendAnimationEvent(gv_glues.lv_gluesPanel, PlayerGroupAll(), "FadeStart");
    DialogControlSendAnimationEvent(gv_glues.lv_landingPanel, PlayerGroupAll(), "Death");
    Wait(0.025, c_timeGame);
    CinematicFade(false, 0.025, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    DialogControlSetVisible(gv_glues.lv_landingPanel, PlayerGroupAll(), false);
    DialogControlSetVisible(gv_glues.lv_gluesPanel, PlayerGroupAll(), false);
    lib1926661B_gf_MissionLaunchDisplay("LT00");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Land_StartBtn_Init () {
    gt_Land_StartBtn = TriggerCreate("gt_Land_StartBtn_Func");
    TriggerAddEventDialogControl(gt_Land_StartBtn, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Land_AchiBtn
//--------------------------------------------------------------------------------------------------
bool gt_Land_AchiBtn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_glues.lv_land_AchiBtn))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libAE8FC9D3_gf_ShowUserProfile(1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Land_AchiBtn_Init () {
    gt_Land_AchiBtn = TriggerCreate("gt_Land_AchiBtn_Func");
    TriggerAddEventDialogControl(gt_Land_AchiBtn, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Land_Quit
//--------------------------------------------------------------------------------------------------
bool gt_Land_Quit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventDialogControl() == gv_glues.lv_land_QuitBtn))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    DialogControlSendAnimationEvent(gv_glues.lv_gluesPanel, PlayerGroupAll(), "FadeStart");
    DialogControlSendAnimationEvent(gv_glues.lv_landingPanel, PlayerGroupAll(), "Death");
    Wait(0.025, c_timeGame);
    DialogControlSetVisible(gv_glues.lv_landingPanel, PlayerGroupAll(), false);
    GameOver(1, c_gameOverTie, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Land_Quit_Init () {
    gt_Land_Quit = TriggerCreate("gt_Land_Quit_Func");
    TriggerAddEventDialogControl(gt_Land_Quit, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Initialization_Init();
    gt_Init01Game_Init();
    gt_Init02MusicSound_Init();
    gt_ML_ReturnToLanding_Init();
    gt_Land_StartBtn_Init();
    gt_Land_AchiBtn_Init();
    gt_Land_Quit_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
